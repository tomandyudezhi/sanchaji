数据库操作
	字符串
		添加
			$redis->set('name','val'); //设置一个值
			$res = $redis->setex('key-2',10,'value-2');  // 第二个参数为声明周期 (单位为秒)
			$res = $redis->mset(['key-4'=>'value-4','key-5'=>'value-5','key-6'=>'value-6']);//批量写入
			$res = $redis->setnx('key-3','value-3');  //如果键名key-3存在则不写入,否则写入
		删除
			$res = $redis->delete('key-3');
			$res = $redis->delete(['key-1','key-2']);
		修改
			$res = $redis->set('key-1','value-1');
			$res = $redis->incr('total');//自增
			$res = $redis->incrBy('total-3',3);//指定步进自增
			$res = $redis->decr('total');//递减
			$res = $redis->decrBy('total', 10);//指定步进递减
		获取
			$res = $redis->get('key-1');
			$res = $redis->mget(['key-4','key-5','key-6']);
	链表操作
		添加
			$res = $redis->lpush('list-1','lv5');//开头插入一个值
			$res = $redis->rpush('list-1','rv1');//结尾插入一个值
		删除
			$res = $redis->lpop('list-1');//左侧弹出一个值
			$res = $redis->rpop('list-1');//右侧弹出一个值
			$res = $redis->lrem('list-1','lv2',1);//移出链表的指定值
		修改
			$res = $redis->lset('list-1',1,'lv10');//修改第n个元素的值
			$res = $redis->rpoplpush('list-1','list-2');//将值从一个链表的右侧弹出,插入到另一个链表的左侧
		获取
			$res = $redis->lindex('list-1',4);//获取第n个元素的值
			$res = $redis->lrange('list-1',0,-1);//获取链表中一段的值
			$res = $redis->lsize('list-1');//获取链表的长度
	无序集合
		添加
			$res = $redis -> sadd('set-1','v6');
			$res = $redis -> sadd('set-4','1','2','3','4');
		删除
			$res = $redis -> srem('set-1','val');//移出指定的值
		修改
			$res = $redis->smove('set-1','set-2','v2');//将一个值从一个集合移动到另一个集合中
		获取
			$res = $redis->smembers('set-1');//获取集合中所有的值
			$res = $redis->ssize('set-1');//获得集合中的元素个数
			$res = $redis->srandmember('set-1');//随机获取集合中的一个元素
			$res = $redis->sinter('set-1','set-2');//获取交集
			$res = $redis->sunion('set-1','set-2');//获取并集
			$res = $redis->sdiff('set-1','set-2');//获取差集
			$res = $redis->sismember('set-1','v5');//检测集合中是否存在该值
	有序集合
		添加
			$res = $redis -> zadd('zset',10,'v1'); //10为权重
		删除
			$res = $redis->zrem('zset','v1');//删除
		修改
			$res = $redis->zincrby('zset',1,'v2');// 增加权重, 1为步进
		获取
			$res = $redis -> zrange('zset',0,-1);//获取所有的元素
			$res = $redis->zrevrange('zset',0,-1);//倒叙获取所有元素
			$res = $redis->zrangebyscore('zset',0,1);//按照权重范围进行获取
			$res = $redis->zrevrangebyscore('zset',10,1);//按照权重范围倒叙获取
			$res = $redis->zcount('zset',3,10);//返回权重区间中元素的个数
			$res = $redis->zsize('zset');//获取集合的元素个数
			$res = $redis->zscore('zset','v7');//获取单个值的权重
			$res = $redis->zrank('zset','v7');//获取某个值的排名
			$res = $redis->zrevrank('zset','v7');//获取某个值的倒序排名
	哈希操作
		添加
			$res = $redis -> hset('hash-1', 'key-1','value-1');//单个值写入
			$res = $redis->hmset('hash-2',['key-3'=>'value-3','key-4'=>'value-4']);//批量写入
			$res = $redis->hincrby('hash-1','total',1);//自增某个值
		删除
			$res = $redis->hdel('hash-1','key-1');
		修改
			$res = $redis -> hset('hash-1', 'key-1','value-abc');
		获取
			$res = $redis -> hget('hash-1','key-1');
			$res = $redis->hmget('hash-2',['key-3','key-4']);//获取多个键名的值
			$res = $redis->hgetall('hash-1');//获取哈希下所有的值
			$res = $redis -> hlen('hash-1');//获取该哈希下元素的个数
			$res = $redis->hkeys('hash-1');//获取所有的键名
			$res = $redis->hvals('hash-1');//获取所有的键值
			$res = $redis->hexists('hash-1','key-2');//检测哈希下是否存在该键名
通用操作
	$redis -> flushdb();//清空当前数据库
	$res = $redis -> ttl('key-2');//返回生命时间
	$redis -> expire('name', 100);//设置声明周期
	$res = $redis -> del('set-1');//删除
	$res = $redis -> exists('key-4');//检测键名是否设置
	$res = $redis -> keys('*');//获取键名
	 $redis->select(2);  选择数据库